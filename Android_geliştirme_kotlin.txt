Manifest : Uygulama ayarları bulunur . 
Örnek ikon nerede olacak , uygulama adı ne olacak , tema ne olacak , hedef api 
ne olacak  
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.Kotlinbtk_1"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter> // ilk bu aktivite açılacaqk
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>

Kotlin+java : Bu kısımda kodlar bulunur , MainActivity örnek sınıflar vs.

test kısmında android unit , entstrumented testleri bulunur.

res(Resources:Kaynaklar kısmı) : Bu kısımda uygulama kaynak dosyaları olur resim , yazı,layout,strings.xml , colors.xml , drawable,activity_main.xml gibi dosyalar bulunur,
Örnek colors.xml : <?xml version="1.0" encoding="utf-8"?>
<resources>
    <color name="black">#FF000000</color>
    <color name="white">#FFFFFFFF</color>
</resources>
backup_rules : Burada verilerin yedekleme işlemi kurallar ile xlm eklenir.


Layout :arayüzde seçimler-> code , split her ikisi , design tasarım kısmı ,
pallet:button görsel,video,text araçları eklenebilir,
Component tree: Eklenen araçların konumları gözükür.
Attributes:Özellikler kısmı araçların özellikleri gözükür. 
Palletin sağ kısmında yatay,dikey,gece-gündüz,ekran boyutları,api sürümü gözükür. show system ui gerçek ekran görüntüsü. infer constraints otomatik sınır ekle.
Wrap-content-> içerik kadar genişle
0dp -> constraintwidget içindeki sağ15 sol 15 üst 15 örnek bu ölçüde resmi göster.

örnek xml kodları :
<TextView
        android:id="@+id/textView"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="28dp"
        android:text="Hello World!"
        android:textAlignment="center"
        android:textSize="24sp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.498"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/imageView" />

    <ImageView
        android:id="@+id/imageView"
        android:layout_width="272dp"
        android:layout_height="296dp"
        android:layout_marginTop="40dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.496"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        tools:srcCompat="@tools:sample/backgrounds/scenic" />

Farklı layout çeşitleri
Linear Layout (alt-alta , yan-yana dizmeye yarar. gruplama işleminde kullan )
Örnek xml kodu gravity sağa sola ayarla ortaya,orientation alt alta yada yan yana hizala.
  <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="50dp"
        android:gravity="center"
        android:orientation="vertical">

        <Button
            android:id="@+id/button2"
            android:layout_width="100dp"
            android:layout_height="100dp"
            android:layout_gravity="center"
            android:layout_margin="5dp"
            android:text="Button"
            android:textSize="30sp" />

        <Button
            android:id="@+id/button3"
            android:layout_width="100dp"
            android:layout_height="100dp"
            android:layout_margin="5dp"
            android:layout_weight="1"
            android:text="Button" />

    </LinearLayout>
Diğer layout isimleri grid layout,relative layour gibi.

Görünümlere kod ile ulaşmak.
Findviewbyıd yöntemi:
        val image = findViewById<ImageView>(R.id.imageView2)
        val textYazı = findViewById<TextView>(R.id.textView2)
        textYazı.text = "Merhaba as"
        image.setImageResource(R.drawable.ic_launcher_background)
View binding yöntemi:
Build.gradle.kts(:app):
	  buildFeatures {
        viewBinding = true
    }

mainactivity.kt:
private lateinit var binding : ActivityMainBinding
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = ActivityMainBinding.inflate(layoutInflater)
        val view = binding.root
        setContentView(view)
}

     binding.textView2.text="yazıdır"  //binding ile erişim 

widget onclik methodu :
	    fun kaydet(view : View){
        binding.textView2.text="kaydet"

    }
    fun iptal(view : View){

        binding.textView2.text="iptal"
    }



        

